name: Auto Semantic Version Tag

on:
  # push:
  #   branches:
  #     - feature/checkov-scan
  pull_request:
    types:
      - closed
    branches:
      - feature/checkov-scan

jobs:
  auto-bump-version:
    name: Bump Version & Tag
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Read Current Version
        id: read-version
        run: |
          CURRENT_VERSION=$(cat .version | tr -d ' ')
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Bump Patch Version
        id: bump-version
        run: |
          MAJOR=$(echo ${{ env.CURRENT_VERSION }} | sed 's/v$([0-9]*\.$[0-9]*\.$[0-9]*)/\1/' | cut -d. -f1)
          MINOR=$(echo ${{ env.CURRENT_VERSION }} | sed 's/v$([0-9]*\.$[0-9]*\.$[0-9]*)/\1/' | cut -d. -f2)
          PATCH=$(echo ${{ env.CURRENT_VERSION }} | sed 's/v$([0-9]*\.$[0-9]*\.$[0-9]*)/\1/' | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update .version File
        run: |
          echo "${{ env.NEW_VERSION }}" > .version
          git add .version
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
          git push origin HEAD:feature/checkov-scan

      - name: Create Annotated Git Tag
        run: |
          git tag -a ${{ env.NEW_VERSION }} -m "Release ${{ env.NEW_VERSION }}"
          git push origin ${{ env.NEW_VERSION }}
