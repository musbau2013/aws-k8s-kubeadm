name: Terraform-Workflow
run-name: Deploying from ${{ inputs.folder }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment (e.g., dev, qa, prod)"
        required: true
        type: environment
        options:
          - dev

      folder:
        description: "Select the folder to deploy"
        required: true
        type: choice
        options:
          - "./test"

      # workspace:
      #   description: "Select the workspace ID"
      #   required: true
      #   type: choice
      #   options:
      #     - "ws-SwEx83WPMU9QRoJ8"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  tflint-scan-and-tfc-deploy:
    name: TFLint Scan & Terraform Cloud Trigger
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Terraform CLI
      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Install TFLint
        run: |
          TFLINT_VERSION=$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest  | grep tag_name | cut -d '"' -f4)
          ARCH=amd64
          OS=linux
          curl -sL https://github.com/terraform-linters/tflint/releases/download/${TFLINT_VERSION}/tflint_${OS}_${ARCH}.zip  > tflint.zip
          unzip tflint.zip
          chmod +x tflint
          sudo mv tflint /usr/local/bin/

      # Step 2: Run TFLint
      - name: Run TFLint
        id: tflint
        run: |
          cd ${{ inputs.folder }} || cd .  # adjust path if needed
          tflint --init || true  # Ignore failure if no .tflint.hcl
          tflint

      # Step 2: Check if TFLint passed
      - name: Check TFLint Result
        id: check-tflint
        run: |
          if [ $? -ne 0 ]; then
            echo "❌ TFLint scan failed. Exiting."
            exit 1
          else
            echo "✅ TFLint scan passed."
          fi

      - name: Trigger Terraform Cloud Run
        if: steps.check-tflint.conclusion == 'success'
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
        run: |
          MESSAGE="Triggered by GitHub Actions after Wiz scan passed"

          curl \
            --header "Authorization: Bearer ${TF_API_TOKEN}" \
            --header "Content-Type: application/json" \
            --request POST \
            --data '{
              "data": {
                "type": "runs",
                "attributes": {
                  "is-destroy": false,
                  "message": "'"${MESSAGE}"'"
                }
              }
            }' \
            "https://app.terraform.io/api/v2/workspaces/${WORKSPACE_ID}/runs"

      # Step 3: Trigger Terraform Cloud Run via API
      # - name: Trigger Terraform Cloud Run
      #   if: steps.check-tflint.conclusion == 'success'
      #   run: |
      #     curl -s --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
      #          --header "Content-Type: application/vnd.api+json" \
      #          --data '{"data":{"type":"runs","attributes":{"is-auto-applied":false},"relationships":{"workspace":{"data":{"type":"workspaces","id":"${{ secrets.WORKSPACE_ID }}"}}}}' \
      #          https://app.terraform.io/api/v2/runs 